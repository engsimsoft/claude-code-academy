/**
 * CLAUDE CODE ACADEMY - LESSON 4 INTERACTIVE MODULE
 * –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–∫–∞ - "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ–∏—á–∏ Claude Code"
 */

const Lesson4 = {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ —É—Ä–æ–∫–∞
    currentStepIndex: 0,
    completedSteps: 0,
    totalSteps: 15,

    // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    terminalInput: null,
    terminalOutput: null,
    progressFill: null,
    progressText: null,
    currentHint: null,
    stepCards: null,
    certificateContainer: null,
    achievementBadges: null,
    celebrationContainer: null,

    // –®–∞–≥–∏ —É—Ä–æ–∫–∞
    lessonSteps: [
        {
            id: 1,
            command: '/config –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
            hint: '–ù–∞—á–Ω–µ–º —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: "/config –ø–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"',
            description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Claude Code',
            response: `‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Claude Code:

üìã **–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:**
\`\`\`yaml
model: claude-3.5-sonnet
temperature: 0.7
max_tokens: 4096
auto_save: true
syntax_highlighting: true
\`\`\`

üé® **–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å:**
\`\`\`yaml
theme: dark
font_size: 14
line_numbers: true
word_wrap: true
vim_mode: false
\`\`\`

üîß **–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:**
\`\`\`yaml
auto_complete: true
context_window: 200000
streaming: true
debug_mode: false
\`\`\`

üí° –ú–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ª—é–±—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É: "/config set theme light"`
        },
        {
            id: 2,
            command: '/config set auto_complete advanced',
            hint: '–£–ª—É—á—à–∏–º –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ: "/config set auto_complete advanced"',
            description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è',
            response: `üöÄ –ê–∫—Ç–∏–≤–∏—Ä—É—é –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ...

‚ú® **Advanced Auto-Complete –≤–∫–ª—é—á–µ–Ω:**

üß† **–ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
- **Context-aware suggestions** - –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- **Multi-file analysis** - –∞–Ω–∞–ª–∏–∑ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
- **Pattern recognition** - —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∫–æ–¥–∞
- **Smart imports** - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

‚ö° **–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:**
- \`Ctrl+Space\`  - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ
- \`Tab\`  - –ø—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
- \`Ctrl+Shift+Space\`  - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
- \`Alt+/\`  - –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã

‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–±—Ä–∞—Ç—å –∫–æ–¥...

üí° –°–æ–≤–µ—Ç: –ì–æ–≤–æ—Ä–∏—Ç–µ Claude Code —á—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å, –∏ –æ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏—Ç –ª—É—á—à–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã!`
        },
        {
            id: 3,
            command: '–Ω–∞—Å—Ç—Ä–æ–π workflow –¥–ª—è React –ø—Ä–æ–µ–∫—Ç–∞',
            hint: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è: "–Ω–∞—Å—Ç—Ä–æ–π workflow –¥–ª—è React –ø—Ä–æ–µ–∫—Ç–∞"',
            description: '–°–æ–∑–¥–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ workflow',
            response: `üîÑ –°–æ–∑–¥–∞—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π React workflow...

üìã **–°–æ–∑–¥–∞–Ω .claude-workflow.yml:**
\`\`\`yaml
name: "React Development Workflow"
triggers:
  - file_change: "*.jsx", "*.tsx"
  - command: "create component"
  - git: "pre-commit"

steps:
  1. analyze_file:
     - check_typescript_errors
     - validate_react_patterns
     - suggest_optimizations

  2. auto_generate:
     - create_test_file
     - add_prop_types
     - generate_storybook_story

  3. code_quality:
     - run_eslint
     - check_accessibility
     - optimize_performance

  4. documentation:
     - update_readme
     - generate_jsdoc
     - create_usage_examples
\`\`\`

‚ö° **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã:**
- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- –õ–∏–Ω—Ç–∏–Ω–≥ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤
- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

‚úÖ Workflow –≥–æ—Ç–æ–≤! –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∏ —É–≤–∏–¥–∏—Ç–µ –º–∞–≥–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏.`
        },
        {
            id: 4,
            command: '—Å–æ–∑–¥–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Modal —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π',
            hint: '–¢–µ—Å—Ç–∏—Ä—É–µ–º workflow: "—Å–æ–∑–¥–∞–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Modal —Å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π"',
            description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞',
            response: `üé≠ –°–æ–∑–¥–∞—é Modal –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π...

üìù **@src/components/Modal/Modal.tsx:**
\`\`\`tsx
interface ModalProps {
  isOpen: boolean;
  onClose: () => void;
  title?: string;
  children: React.ReactNode;
  size?: 'sm' | 'md' | 'lg' | 'xl';
}

export const Modal: React.FC<ModalProps> = ({
  isOpen,
  onClose,
  title,
  children,
  size = 'md'
}) => {
  useEffect(() => {
    if (isOpen) {
      document.body.style.overflow = 'hidden';
    } else {
      document.body.style.overflow = 'unset';
    }
    return () => { document.body.style.overflow = 'unset'; };
  }, [isOpen]);

  if (!isOpen) return null;

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className={\`modal-content modal-\${size}\`} onClick={e => e.stopPropagation()}>
        {title && <div className="modal-header">{title}</div>}
        <div className="modal-body">{children}</div>
      </div>
    </div>
  );
};
\`\`\`

ü§ñ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:**
‚úÖ Modal.test.tsx - 12 unit —Ç–µ—Å—Ç–æ–≤
‚úÖ Modal.stories.tsx - 6 Storybook –∏—Å—Ç–æ—Ä–∏–π
‚úÖ Modal.module.css - –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Å—Ç–∏–ª–∏
‚úÖ index.ts - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π export
‚úÖ README.md - –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

üìä **–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞:** A+ (TypeScript, accessibility, performance)`
        },
        {
            id: 5,
            command: '–∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–π —Å GitHub Actions',
            hint: 'CI/CD: "–∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–π —Å GitHub Actions"',
            description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏',
            response: `üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å GitHub Actions...

üìÅ **.github/workflows/claude-code.yml:**
\`\`\`yaml
name: Claude Code CI/CD
on: [push, pull_request]

jobs:
  claude-review:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Claude Code Analysis
        uses: anthropic/claude-code-action@v1
        with:
          api_key: \${{ secrets.CLAUDE_API_KEY }}
          commands: |
            analyze code quality
            check for security issues
            suggest optimizations
            run all tests

      - name: Auto-fix Issues
        run: |
          claude-code "–∏—Å–ø—Ä–∞–≤—å –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã"

      - name: Generate Report
        run: |
          claude-code "—Å–æ–∑–¥–∞–π –æ—Ç—á–µ—Ç –æ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–¥–∞"
\`\`\`

üîê **Secrets –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:**
- CLAUDE_API_KEY
- DEPLOYMENT_TOKEN
- SLACK_WEBHOOK (–¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)

‚ö° **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:**
‚úÖ Code quality analysis –ø—Ä–∏ –∫–∞–∂–¥–æ–º PR
‚úÖ Security vulnerability scanning
‚úÖ Performance optimization suggestions
‚úÖ Automatic bug fixes –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ
‚úÖ Deployment –≤ staging environment

üí° –¢–µ–ø–µ—Ä—å Claude Code —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —á–∞—Å—Ç—å –≤–∞—à–µ–≥–æ CI/CD pipeline!`
        },
        {
            id: 6,
            command: '–ø–æ–¥–∫–ª—é—á–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Figma',
            hint: 'Design-to-code: "–ø–æ–¥–∫–ª—é—á–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Figma"',
            description: '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥–∏–∑–∞–π–Ω-—Å–∏—Å—Ç–µ–º–∞–º–∏',
            response: `üé® –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é Claude Code —Å Figma...

üîó **Figma Claude Code Plugin –Ω–∞—Å—Ç—Ä–æ–µ–Ω:**

üìã **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
\`\`\`
/figma import <design-url>  - –∏–º–ø–æ—Ä—Ç –¥–∏–∑–∞–π–Ω–∞ –≤ –∫–æ–¥
/figma sync                 - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
/figma tokens              - —ç–∫—Å–ø–æ—Ä—Ç design tokens
/figma components          - —Å–æ–∑–¥–∞–Ω–∏–µ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
\`\`\`

üéØ **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
\`\`\`bash
/figma import https://figma.com/file/abc123/button-design
\`\`\`

**–†–µ–∑—É–ª—å—Ç–∞—Ç:**
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ Figma
‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã TypeScript —Ç–∏–ø—ã
‚úÖ –°–æ–∑–¥–∞–Ω–∞ Storybook –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

üîÑ **Auto-sync –Ω–∞—Å—Ç—Ä–æ–µ–Ω:**
- –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ Figma ‚Üí –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Slack –æ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏—è—Ö –¥–∏–∑–∞–π–Ω–∞
- Conflict resolution –ø—Ä–∏ —Ä–∞–∑–ª–∏—á–∏—è—Ö

üí° **Design-to-code workflow:** –î–∏–∑–∞–π–Ω–µ—Ä –æ–±–Ω–æ–≤–ª—è–µ—Ç Figma ‚Üí Claude Code –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã ‚Üí PR —Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!`
        },
        {
            id: 7,
            command: '—Å–æ–∑–¥–∞–π –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã',
            hint: 'Team workflow: "—Å–æ–∑–¥–∞–π –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–º–∞–Ω–¥—ã"',
            description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–º–∞–Ω–¥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã',
            response: `üë• –°–æ–∑–¥–∞—é –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã...

üìã **.claude-team-commands.yml:**
\`\`\`yaml
team_commands:
  deploy:
    command: "deploy to staging"
    description: "Deploy current branch to staging"
    steps:
      - run_tests
      - build_production
      - deploy_vercel
      - notify_slack

  review:
    command: "prepare for review"
    description: "Prepare PR for code review"
    steps:
      - format_code
      - update_docs
      - run_linting
      - create_pr_template

  hotfix:
    command: "create hotfix"
    description: "Emergency production fix"
    steps:
      - create_hotfix_branch
      - apply_fix
      - run_critical_tests
      - deploy_production
      - notify_team

  onboard:
    command: "onboard new developer"
    description: "Setup environment for new team member"
    steps:
      - clone_repository
      - install_dependencies
      - setup_env_variables
      - run_dev_server
      - open_documentation
\`\`\`

‚ö° **–ö–æ–º–∞–Ω–¥—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã:**
\`\`\`
/team deploy          - –¥–µ–ø–ª–æ–π –Ω–∞ staging
/team review          - –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ code review
/team hotfix "bug description" - —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
/team onboard @username        - –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
\`\`\`

üîî **Slack –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞:**
- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–µ–ø–ª–æ—è—Ö
- –°—Ç–∞—Ç—É—Å CI/CD pipeline
- Mention –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö

‚úÖ –ö–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —Å—Ç–∞–ª–∞ –µ—â–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ!`
        },
        {
            id: 8,
            command: '–Ω–∞—Å—Ç—Ä–æ–π AI prompting –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é',
            hint: 'AI optimization: "–Ω–∞—Å—Ç—Ä–æ–π AI prompting –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é"',
            description: '–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è AI –ø—Ä–æ–º–ø—Ç–æ–≤',
            response: `üß† –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é AI –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...

üìö **Claude Code Smart Prompting –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:**

üéØ **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–º–ø—Ç–æ–≤:**
\`\`\`yaml
prompt_optimization:
  context_enhancement: true
  specificity_boost: true
  example_injection: true
  constraint_clarity: true
  output_formatting: true
\`\`\`

üí° **–í–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã ‚Üí –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã:**

**–í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ:** "—Å–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é"
**Claude Code –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:**
\`\`\`
–°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é —Å —Å–ª–µ–¥—É—é—â–∏–º–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏:
- TypeScript —Ç–∏–ø–∏–∑–∞—Ü–∏—è
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
- JSDoc –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
- Unit —Ç–µ—Å—Ç—ã
- –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
–ö–æ–Ω—Ç–µ–∫—Å—Ç: React –ø—Ä–æ–µ–∫—Ç, —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª: \${currentFile}
\`\`\`

**–í—ã –≥–æ–≤–æ—Ä–∏—Ç–µ:** "–∏—Å–ø—Ä–∞–≤—å –±–∞–≥"
**Claude Code –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç:**
\`\`\`
–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –∫–æ–¥ –∏ –∏—Å–ø—Ä–∞–≤—å –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:
- –ù–∞–π–¥–∏ root cause –ø—Ä–æ–±–ª–µ–º—ã
- –ü—Ä–µ–¥–ª–æ–∂–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ —Ä–µ—à–µ–Ω–∏—è
- –û–±—ä—è—Å–Ω–∏ –ø–æ—á–µ–º—É –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞
- –î–æ–±–∞–≤—å —Ç–µ—Å—Ç—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏
–ö–æ–¥: \${selectedCode}
–û—à–∏–±–∫–∞: \${errorMessage}
\`\`\`

üìà **–†–µ–∑—É–ª—å—Ç–∞—Ç:** –ö–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤ —É–ª—É—á—à–µ–Ω–æ –Ω–∞ 40%!`
        },
        {
            id: 9,
            command: '—Å–æ–∑–¥–∞–π monitoring –∏ analytics',
            hint: 'Monitoring: "—Å–æ–∑–¥–∞–π monitoring –∏ analytics"',
            description: '–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–∞',
            response: `üìä –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é comprehensive monitoring –∏ analytics...

üîç **Real-time –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–∞—Å—Ç—Ä–æ–µ–Ω:**

üìà **Performance Monitoring:**
\`\`\`typescript
// –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –ø—Ä–æ–µ–∫—Ç
import { Analytics } from './monitoring/analytics';

const analytics = new Analytics({
  performance: true,
  errors: true,
  user_interactions: true,
  core_web_vitals: true
});

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç—Ä–µ–∫–∏–Ω–≥
analytics.track('lesson_completed', {
  lesson_id: 4,
  completion_time: '12:34',
  user_score: 95
});
\`\`\`

üö® **Error Tracking:**
\`\`\`javascript
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
window.addEventListener('error', (error) => {
  analytics.trackError({
    message: error.message,
    stack: error.error.stack,
    url: window.location.href,
    timestamp: new Date().toISOString()
  });
});
\`\`\`

üì± **User Experience Monitoring:**
- Page load times
- User interaction patterns
- Lesson completion rates
- Code execution success rates
- Terminal usage analytics

üìä **Dashboard —Å–æ–∑–¥–∞–Ω:**
Real-time –º–µ—Ç—Ä–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ /admin/dashboard

‚úÖ –¢–µ–ø–µ—Ä—å –≤—ã –≤–∏–¥–∏—Ç–µ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π!`
        },
        {
            id: 10,
            command: '–Ω–∞—Å—Ç—Ä–æ–π production deployment pipeline',
            hint: 'Production: "–Ω–∞—Å—Ç—Ä–æ–π production deployment pipeline"',
            description: 'Production-ready –¥–µ–ø–ª–æ–π',
            response: `üöÄ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é production-ready deployment pipeline...

üè≠ **Production Pipeline —Å–æ–∑–¥–∞–Ω:**

üìã **.claude-production.yml:**
\`\`\`yaml
production_pipeline:
  pre_deploy:
    - security_scan
    - performance_audit
    - accessibility_check
    - seo_optimization
    - bundle_analysis

  deploy_stages:
    1. staging_deploy:
       - run_integration_tests
       - visual_regression_tests
       - load_testing

    2. production_deploy:
       - blue_green_deployment
       - health_checks
       - rollback_preparation

    3. post_deploy:
       - smoke_tests
       - performance_monitoring
       - error_tracking
       - user_notification

  monitoring:
    - uptime_monitoring
    - performance_alerts
    - error_rate_tracking
    - user_satisfaction_metrics
\`\`\`

üîê **Security –º–µ—Ä–∏—Ä—ã:**
‚úÖ Environment variables –∑–∞—â–∏—â–µ–Ω—ã
‚úÖ API keys encrypted
‚úÖ HTTPS –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
‚úÖ CSP headers –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
‚úÖ Rate limiting –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω

üìä **Production –º–µ—Ç—Ä–∏–∫–∏:**
- 99.9% uptime SLA
- < 2s page load time
- < 0.1% error rate
- A+ security grade

üéØ **Zero-downtime deployments** –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!

üí° –í–∞—à –ø—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ enterprise production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!`
        },
        {
            id: 11,
            command: '—Å–æ–∑–¥–∞–π advanced debugging —Ä–µ–∂–∏–º',
            hint: 'Debugging: "—Å–æ–∑–¥–∞–π advanced debugging —Ä–µ–∂–∏–º"',
            description: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –æ—Ç–ª–∞–¥–∫–∞',
            response: `üêõ –ê–∫—Ç–∏–≤–∏—Ä—É—é advanced debugging —Ä–µ–∂–∏–º...

üîß **Claude Code Debug Console –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω:**

üíª **–ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –æ—Ç–ª–∞–¥–∫–∏:**
\`\`\`bash
/debug start           - –Ω–∞—á–∞—Ç—å —Å–µ—Å—Å–∏—é –æ—Ç–ª–∞–¥–∫–∏
/debug inspect <var>   - –∏–Ω—Å–ø–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
/debug trace <func>    - —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏
/debug performance     - –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
/debug memory          - –∞–Ω–∞–ª–∏–∑ —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏
/debug network         - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
\`\`\`

üéØ **AI-powered debugging:**
\`\`\`typescript
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞
class AdvancedDebugger {
  analyzeError(error: Error) {
    return {
      rootCause: "State mutation in React component",
      suggestions: [
        "–ò—Å–ø–æ–ª—å–∑—É–π useCallback –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π",
        "–î–æ–±–∞–≤—å key prop –≤ —Å–ø–∏—Å–∫–∏",
        "–ü—Ä–æ–≤–µ—Ä—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ useEffect"
      ],
      fixCode: "// –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∏–∫—Å..."
    };
  }
}
\`\`\`

üîç **Visual debugging:**
- Component tree visualization
- State flow diagram
- Performance waterfall
- Memory usage graph
- Network requests timeline

‚ö° **Real-time suggestions:**
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º
- Instant –∫–æ–¥ —Ñ–∏–∫—Å—ã
- Performance optimization tips
- Best practices recommendations

‚úÖ Debug —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: "/debug inspect myVariable"`
        },
        {
            id: 12,
            command: '—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π –ø—Ä–æ–µ–∫—Ç –∫–∞–∫ template',
            hint: 'Sharing: "—ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–π –ø—Ä–æ–µ–∫—Ç –∫–∞–∫ template"',
            description: '–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–≥–æ —à–∞–±–ª–æ–Ω–∞',
            response: `üì¶ –°–æ–∑–¥–∞—é –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π template –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞...

üéØ **Claude Code Template Generator:**

üìã **Template "claude-code-academy" —Å–æ–∑–¥–∞–Ω:**
\`\`\`yaml
template_name: "claude-code-academy"
version: "2.2.0"
description: "Interactive coding education platform"
author: "Claude Code Team"

features:
  - interactive_terminal
  - progress_tracking
  - responsive_design
  - modular_architecture
  - ai_integration

tech_stack:
  - HTML5
  - CSS3 (Custom Properties)
  - Vanilla JavaScript ES6+
  - Claude Design System
  - Vercel Deployment

customization_options:
  - theme_colors
  - lesson_content
  - branding
  - deployment_target
\`\`\`

üöÄ **Template –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω:**
- GitHub Template Repository: ‚úÖ
- NPM Package: ‚úÖ
- Claude Code Template Store: ‚úÖ
- Documentation: ‚úÖ

üìã **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ template:**
\`\`\`bash
claude-code create-project my-academy \\
  --template claude-code-academy \\
  --theme custom \\
  --deploy vercel
\`\`\`

üåü **Template –≤–∫–ª—é—á–∞–µ—Ç:**
- –ü–æ–ª–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
- 4 –≥–æ—Ç–æ–≤—ã—Ö –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —É—Ä–æ–∫–∞
- –°–∏—Å—Ç–µ–º—É –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
- Responsive –¥–∏–∑–∞–π–Ω
- Deployment –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é

üí° –¢–µ–ø–µ—Ä—å –ª—é–±–æ–π –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –ø–æ–¥–æ–±–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∑–∞ 5 –º–∏–Ω—É—Ç!`
        },
        {
            id: 13,
            command: '—Å–æ–∑–¥–∞–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏',
            hint: 'Achievement: "—Å–æ–∑–¥–∞–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏"',
            description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞',
            response: `üèÜ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –∫—É—Ä—Å–∞...

üìú **–°–ï–†–¢–ò–§–ò–ö–ê–¢ CLAUDE CODE ACADEMY:**

\`\`\`
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                    üéì –°–ï–†–¢–ò–§–ò–ö–ê–¢ –û –ü–†–û–•–û–ñ–î–ï–ù–ò–ò                ‚ïë
‚ïë                                                               ‚ïë
‚ïë                    Claude Code Academy                        ‚ïë
‚ïë                                                               ‚ïë
‚ïë    –ù–∞—Å—Ç–æ—è—â–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ                            ‚ïë
‚ïë                                                               ‚ïë
‚ïë                    [–ò–ú–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø]                        ‚ïë
‚ïë                                                               ‚ïë
‚ïë    —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª/–ø—Ä–æ—à–ª–∞ –ø–æ–ª–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è                ‚ïë
‚ïë    "–û—Ç Cursor –∫ Claude Code –∑–∞ 30 –º–∏–Ω—É—Ç"                     ‚ïë
‚ïë                                                               ‚ïë
‚ïë    –ò–∑—É—á–µ–Ω–æ:                                                   ‚ïë
‚ïë    ‚úÖ –£—Ä–æ–∫ 1: –ü–µ—Ä–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã Claude Code                     ‚ïë
‚ïë    ‚úÖ –£—Ä–æ–∫ 2: –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã                           ‚ïë
‚ïë    ‚úÖ –£—Ä–æ–∫ 3: –†–∞–±–æ—Ç–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º                              ‚ïë
‚ïë    ‚úÖ –£—Ä–æ–∫ 4: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ–∏—á–∏                               ‚ïë
‚ïë                                                               ‚ïë
‚ïë    –†–µ–∑—É–ª—å—Ç–∞—Ç: 98/100 –±–∞–ª–ª–æ–≤                                  ‚ïë
‚ïë    –î–∞—Ç–∞: \${new Date().toLocaleDateString()}                  ‚ïë
‚ïë                                                               ‚ïë
‚ïë    –ü–æ–¥–ø–∏—Å—å: Claude Code Team ü§ñ                              ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
\`\`\`

üéØ **–ù–∞–≤—ã–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã:**
- ‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã Claude Code
- ‚úÖ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏
- ‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ —Å AI
- ‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è
- ‚úÖ Production-ready —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞

üìÑ **–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω:**
- PDF –≤–µ—Ä—Å–∏—è: certificate_claude_code.pdf
- PNG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: certificate_image.png
- Blockchain verification: ‚úÖ
- LinkedIn –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: ‚úÖ

üåü **–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω—ã–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ–º –∫—É—Ä—Å–∞!**`
        },
        {
            id: 14,
            command: '–ø–æ–∫–∞–∂–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏',
            hint: 'Career: "–ø–æ–∫–∞–∂–∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"',
            description: '–ö–∞—Ä—å–µ—Ä–Ω—ã–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã',
            response: `üíº –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –æ—Å–≤–æ–µ–Ω–∏—è Claude Code...

üöÄ **–ö–∞—Ä—å–µ—Ä–Ω—ã–µ —Ç—Ä–µ–∫–∏ —Å Claude Code:**

üë®‚Äçüíª **AI-Assisted Developer (+ 40% –∫ –∑–∞—Ä–ø–ª–∞—Ç–µ):**
- Full-stack —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Å AI –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
- Rapid prototyping –∏ MVP —Å–æ–∑–¥–∞–Ω–∏–µ
- –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
- Code review –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è

üèóÔ∏è **AI Solutions Architect (+ 60% –∫ –∑–∞—Ä–ø–ª–∞—Ç–µ):**
- –ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-enhanced –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
- Integration planning –¥–ª—è AI tools
- Team training –ø–æ AI-assisted development
- Technical leadership –≤ AI projects

üéì **AI Coding Instructor/Consultant (+ 80% –∫ –∑–∞—Ä–ø–ª–∞—Ç–µ):**
- –û–±—É—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ Claude Code
- –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º
- –ö–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥ –ø–æ AI workflow optimization
- Workshop –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –∏ –º–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ

üî¨ **Prompt Engineer (+ 100% –∫ –∑–∞—Ä–ø–ª–∞—Ç–µ):**
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è AI –ø—Ä–æ–º–ø—Ç–æ–≤ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
- –°–æ–∑–¥–∞–Ω–∏–µ AI automation pipelines
- Research & Development –≤ AI coding
- Building custom AI development tools

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä—ã–Ω–∫–∞:**
- 89% –∫–æ–º–ø–∞–Ω–∏–π –ø–ª–∞–Ω–∏—Ä—É—é—Ç –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ AI coding tools
- 156% —Ä–æ—Å—Ç —Å–ø—Ä–æ—Å–∞ –Ω–∞ AI-skilled developers
- \$120,000+ —Å—Ä–µ–¥–Ω—è—è –∑–∞—Ä–ø–ª–∞—Ç–∞ AI-assisted developer
- 67% —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É—é—Ç AI –µ–∂–µ–¥–Ω–µ–≤–Ω–æ

üéØ **–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**
1. –°–æ–∑–¥–∞–π—Ç–µ portfolio –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å Claude Code
2. –ü–æ–ª—É—á–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é GitHub Copilot
3. –ò–∑—É—á–∏—Ç–µ prompt engineering
4. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ AI development communities

üí° **–í–∞—à–∏ –Ω–∞–≤—ã–∫–∏ Claude Code - —ç—Ç–æ –±–∏–ª–µ—Ç –≤ –±—É–¥—É—â–µ–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!**`
        },
        {
            id: 15,
            command: '–∑–∞–≤–µ—Ä—à–∏—Ç—å –∫—É—Ä—Å –∏ –ø–æ–ª—É—á–∏—Ç—å rewards',
            hint: '–§–∏–Ω–∞–ª: "–∑–∞–≤–µ—Ä—à–∏—Ç—å –∫—É—Ä—Å –∏ –ø–æ–ª—É—á–∏—Ç—å rewards"',
            description: '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –æ–±—É—á–µ–Ω–∏—è',
            response: `üéâ –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú –° –ó–ê–í–ï–†–®–ï–ù–ò–ï–ú CLAUDE CODE ACADEMY! üéâ

üèÜ **–§–ò–ù–ê–õ–¨–ù–´–ï –î–û–°–¢–ò–ñ–ï–ù–ò–Ø:**

‚ú® **–ö—É—Ä—Å –ø—Ä–æ–π–¥–µ–Ω –Ω–∞ 100%!**
- ‚úÖ –£—Ä–æ–∫ 1: –ü–µ—Ä–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã (8/8 —à–∞–≥–æ–≤)
- ‚úÖ –£—Ä–æ–∫ 2: –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (10/10 —à–∞–≥–æ–≤)
- ‚úÖ –£—Ä–æ–∫ 3: –†–∞–±–æ—Ç–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º (12/12 —à–∞–≥–æ–≤)
- ‚úÖ –£—Ä–æ–∫ 4: –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ñ–∏—á–∏ (15/15 —à–∞–≥–æ–≤)

üéÅ **–≠–ö–°–ö–õ–Æ–ó–ò–í–ù–´–ï –ù–ê–ì–†–ê–î–´:**

üîë **Claude Code Pro License (1 –≥–æ–¥ –±–µ—Å–ø–ª–∞—Ç–Ω–æ)**
- –î–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º —Ñ–∏—á–∞–º
- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
- Advanced AI models

üìö **–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã:**
- "Claude Code Best Practices" (PDF)
- Video masterclass –∑–∞–ø–∏—Å–∏
- –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É Discord —Å–æ–æ–±—â–µ—Å—Ç–≤—É

ü§ù **VIP —Å—Ç–∞—Ç—É—Å:**
- –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–∞ exclusive webinars
- Early access –∫ –Ω–æ–≤—ã–º —Ñ–∏—á–∞–º
- Direct line —Å Claude Code team

üåü **–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
- Referral program (–∑–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ - \$50)
- Beta tester –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ–∏—á
- –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞—Ç—å Claude Code Ambassador
- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å AI experts

üíé **–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –±–æ–Ω—É—Å—ã:**
- Claude Code merchandise kit
- –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π LinkedIn badge
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –æ—Ç Claude Code Team
- –î–æ—Å—Ç—É–ø –∫ job board —Å AI-focused –≤–∞–∫–∞–Ω—Å–∏—è–º–∏

üìà **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
- –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è: 2 —á–∞—Å–∞ 47 –º–∏–Ω—É—Ç
- –ö–æ–º–∞–Ω–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: 45
- –ü—Ä–æ–µ–∫—Ç–æ–≤ —Å–æ–∑–¥–∞–Ω–æ: 8
- –ù–∞–≤—ã–∫–æ–≤ –æ—Å–≤–æ–µ–Ω–æ: 23
- –†–µ–π—Ç–∏–Ω–≥: 98/100 (Excellent!)

üöÄ **–ß—Ç–æ –¥–∞–ª—å—à–µ?**
1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º –≤ LinkedIn
2. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç–µ—Å—å –∫ Claude Code Community
3. –ù–∞—á–Ω–∏—Ç–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –Ω–∞–≤—ã–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
4. –†–µ–∫–æ–º–µ–Ω–¥—É–π—Ç–µ –∫—É—Ä—Å –∫–æ–ª–ª–µ–≥–∞–º

üíå **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç Claude:**
"–í—ã –ø—Ä–æ—à–ª–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π –ø—É—Ç—å –æ—Ç –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –¥–æ –º–∞—Å—Ç–µ—Ä—Å–∫–æ–≥–æ –≤–ª–∞–¥–µ–Ω–∏—è Claude Code! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã –≤ 10x –±—ã—Å—Ç—Ä–µ–µ, –∏—Å–ø–æ–ª—å–∑—É—è —Å–∏–ª—É AI. –ü–æ–º–Ω–∏—Ç–µ: –±—É–¥—É—â–µ–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - —ç—Ç–æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏ –ò–ò. –í—ã –≥–æ—Ç–æ–≤—ã –∫ —ç—Ç–æ–º—É –±—É–¥—É—â–µ–º—É!

–£–¥–∞—á–∏ –≤ –≤–∞—à–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö! ü§ñ‚ù§Ô∏è"

üéä **–ö–£–†–° –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù!**
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ Claude Code Masters!

üîó **–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:**
- Claude Code Documentation: docs.claude.com
- Community Discord: discord.gg/claude-code
- GitHub Repository: github.com/claude-code
- Support: support@claude.com

üéØ **–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å:** Claude Code Enterprise Masterclass
–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –≤–∞—à email –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.

Thank you for being part of the future of coding! üöÄ‚ú®`
        }
    ],

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —É—Ä–æ–∫–∞
     */
    init() {
        this.terminalInput = document.getElementById('terminal-input');
        this.terminalOutput = document.getElementById('terminal-output');
        this.progressFill = document.getElementById('lesson-progress');
        this.progressText = document.getElementById('progress-text');
        this.currentHint = document.getElementById('current-hint');
        this.stepCards = document.querySelectorAll('.step-card');
        this.certificateContainer = document.getElementById('certificate-container');
        this.achievementBadges = document.getElementById('achievement-badges');
        this.celebrationContainer = document.getElementById('celebration-container');

        if (this.terminalInput && this.terminalOutput) {
            this.bindEvents();
            this.loadProgress();
            this.updateUI();
            console.log('Lesson4: –ú–æ–¥—É–ª—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.error('Lesson4: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ DOM —ç–ª–µ–º–µ–Ω—Ç—ã');
        }
    },

    /**
     * –ü—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    bindEvents() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–º–∞–Ω–¥
        this.terminalInput.addEventListener('keypress', (event) => {
            if (event.key === 'Enter') {
                event.preventDefault();
                this.handleCommand();
            }
        });

        // –§–æ–∫—É—Å –Ω–∞ input –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ç–µ—Ä–º–∏–Ω–∞–ª
        this.terminalOutput.parentElement.addEventListener('click', () => {
            this.terminalInput.focus();
        });
    },

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    handleCommand() {
        const command = this.terminalInput.value.trim();
        if (!command) return;

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        this.addTerminalLine('‚ö° claude', command, 'user');
        this.terminalInput.value = '';

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É
        this.processCommand(command);
    },

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
     */
    processCommand(command) {
        const currentStep = this.lessonSteps[this.currentStepIndex];

        if (!currentStep) {
            this.addTerminalLine('‚ö° claude', '–í—Å–µ —à–∞–≥–∏ —É—Ä–æ–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω—ã! üéâ', 'system');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–æ–º–∞–Ω–¥—ã (–≥–∏–±–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ)
        if (this.isCommandMatch(command, currentStep.command)) {
            this.executeStep(currentStep);
        } else {
            this.addTerminalLine('‚ö° claude', `–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: ${currentStep.command}`, 'hint');
        }
    },

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–æ–º–∞–Ω–¥—ã
     */
    isCommandMatch(userCommand, expectedCommand) {
        const normalize = (str) => str.toLowerCase().trim().replace(/\s+/g, ' ');
        return normalize(userCommand) === normalize(expectedCommand) ||
               normalize(userCommand).includes(normalize(expectedCommand)) ||
               normalize(expectedCommand).includes(normalize(userCommand));
    },

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —à–∞–≥–∞ —É—Ä–æ–∫–∞
     */
    executeStep(step) {
        // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        this.addTerminalLine('', step.response, 'response');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º —à–∞–≥–æ–º
        if (step.id === 15) {
            this.celebrateCompletion();
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        this.completedSteps++;
        this.currentStepIndex++;

        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        this.updateUI();
        this.updateStepCard(step.id, 'completed');

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        this.saveProgress();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞
        if (this.currentStepIndex >= this.totalSteps) {
            this.completeLesson();
        } else {
            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞
            this.updateHint();
        }
    },

    /**
     * Celebration –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
     */
    celebrateCompletion() {
        // –°–æ–∑–¥–∞–µ–º fireworks
        this.createFireworks();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º achievement badges
        this.showAchievementBadges();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        this.showCertificate();

        // –î–æ–±–∞–≤–ª—è–µ–º celebration –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
        setTimeout(() => {
            this.addTerminalLine('üéä', 'üéâ CELEBRATION TIME! üéâ', 'celebration');
            this.addTerminalLine('üéä', '–§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω! –ü–æ–ª—É—á–∞–π—Ç–µ –Ω–∞–≥—Ä–∞–¥—ã!', 'celebration');
        }, 500);
    },

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫–æ–≤
     */
    createFireworks() {
        for (let i = 0; i < 50; i++) {
            setTimeout(() => {
                const firework = document.createElement('div');
                firework.className = 'firework';
                firework.style.left = Math.random() * 100 + '%';
                firework.style.top = Math.random() * 100 + '%';
                firework.style.background = ['#FFD700', '#FF6B35', '#00ff00'][Math.floor(Math.random() * 3)];
                this.celebrationContainer.appendChild(firework);

                setTimeout(() => {
                    firework.remove();
                }, 2000);
            }, i * 50);
        }

        this.celebrationContainer.style.display = 'block';
    },

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å achievement badges
     */
    showAchievementBadges() {
        const badges = [
            'üéì Master Graduate',
            'üöÄ AI Developer',
            '‚ö° Code Wizard',
            'üèÜ Champion',
            'üíé Expert Level'
        ];

        badges.forEach((badge, index) => {
            setTimeout(() => {
                const badgeElement = document.createElement('span');
                badgeElement.className = 'achievement-badge';
                badgeElement.textContent = badge;
                this.achievementBadges.appendChild(badgeElement);
            }, index * 300);
        });

        this.achievementBadges.style.display = 'block';
    },

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
     */
    showCertificate() {
        const certificateHTML = `
            <div class="certificate">
                <h2>üèÜ –°–ï–†–¢–ò–§–ò–ö–ê–¢ –û –ü–†–û–•–û–ñ–î–ï–ù–ò–ò</h2>
                <p><strong>–ù–∞—Å—Ç–æ—è—â–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç—Å—è, —á—Ç–æ</strong></p>
                <h3 style="color: #FF6B35; margin: 20px 0;">[Claude Code Student]</h3>
                <p><strong>—É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–µ–ª –ø–æ–ª–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è</strong></p>
                <p style="font-style: italic; margin: 20px 0;">"Claude Code Academy - –û—Ç Cursor –∫ –ú–∞—Å—Ç–µ—Ä—Å—Ç–≤—É"</p>

                <div style="margin: 30px 0;">
                    <h4>–ò–∑—É—á–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏:</h4>
                    <p>‚úÖ –ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã Claude Code</p>
                    <p>‚úÖ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏</p>
                    <p>‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏ —Å AI</p>
                    <p>‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è</p>
                    <p>‚úÖ Production-ready —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞</p>
                </div>

                <div style="margin: 30px 0; padding: 20px; background: rgba(255, 215, 0, 0.1); border-radius: 10px;">
                    <h4>–†–µ–∑—É–ª—å—Ç–∞—Ç: <span style="color: #FFD700; font-size: 24px;">98/100 –±–∞–ª–ª–æ–≤</span></h4>
                    <p>–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤ —Ç–æ–ø 5% —Å—Ç—É–¥–µ–Ω—Ç–æ–≤!</p>
                </div>

                <p><strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}</p>
                <p><strong>–ü–æ–¥–ø–∏—Å—å:</strong> Claude Code Team ü§ñ</p>
            </div>
        `;

        this.certificateContainer.innerHTML = certificateHTML;
        this.certificateContainer.style.display = 'block';
    },

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª
     */
    addTerminalLine(prompt, text, type = 'system') {
        const line = document.createElement('div');
        line.className = 'terminal-line';

        if (prompt) {
            const promptSpan = document.createElement('span');
            promptSpan.className = 'prompt';
            promptSpan.textContent = prompt;
            line.appendChild(promptSpan);
        }

        const textSpan = document.createElement('span');
        textSpan.className = `text ${type}`;

        // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ markdown-like —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        textSpan.innerHTML = this.formatResponse(text);
        line.appendChild(textSpan);

        this.terminalOutput.appendChild(line);
        this.terminalOutput.scrollTop = this.terminalOutput.scrollHeight;
    },

    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π markdown
     */
    formatResponse(text) {
        return text
            .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
            .replace(/`([^`]+)`/g, '<code class="file-path">$1</code>')
            .replace(/```(\w+)?\n([\s\S]*?)```/g, '<div class="git-diff">$2</div>')
            .replace(/^(\+.*$)/gm, '<span class="git-addition">$1</span>')
            .replace(/^(-.*$)/gm, '<span class="git-deletion">$1</span>')
            .replace(/\n/g, '<br>');
    },

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
     */
    updateUI() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        const progressPercent = (this.completedSteps / this.totalSteps) * 100;
        this.progressFill.style.width = `${progressPercent}%`;
        this.progressText.textContent = `${this.completedSteps} / ${this.totalSteps} —à–∞–≥–æ–≤`;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —à–∞–≥
        this.stepCards.forEach((card, index) => {
            card.classList.remove('active');
            if (index === this.currentStepIndex) {
                card.classList.add('active');
            }
        });
    },

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —à–∞–≥–∞
     */
    updateStepCard(stepId, status) {
        const card = document.querySelector(`[data-step="${stepId}"]`);
        if (card) {
            card.classList.remove('active');
            card.classList.add(status);

            const statusElement = card.querySelector('.step-status');
            if (statusElement) {
                statusElement.textContent = status === 'completed' ? '‚úÖ' : '‚è≥';
            }
        }
    },

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
     */
    updateHint() {
        const nextStep = this.lessonSteps[this.currentStepIndex];
        if (nextStep && this.currentHint) {
            this.currentHint.innerHTML = `
                <h3>–®–∞–≥ ${nextStep.id}: ${nextStep.description}</h3>
                <p>${nextStep.hint}</p>
            `;
        }
    },

    /**
     * –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —É—Ä–æ–∫–∞
     */
    completeLesson() {
        setTimeout(() => {
            this.addTerminalLine('üéâ', '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ —É—Ä–æ–∫ 4!', 'success');
            this.addTerminalLine('üöÄ', '–¢–µ–ø–µ—Ä—å –≤—ã –º–∞—Å—Ç–µ—Ä Claude Code!', 'success');

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å)
            const nextLessonContainer = document.getElementById('next-lesson-container');
            if (nextLessonContainer) {
                nextLessonContainer.style.display = 'block';
            }

            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
            if (window.Lessons) {
                window.Lessons.unlockLesson(5);
            }
        }, 1000);
    },

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏–∑ localStorage
     */
    loadProgress() {
        const saved = Utils.storage('lesson4-progress');
        if (saved) {
            this.currentStepIndex = saved.currentStepIndex || 0;
            this.completedSteps = saved.completedSteps || 0;

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫
            for (let i = 0; i < this.completedSteps; i++) {
                this.updateStepCard(i + 1, 'completed');
            }

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤
            this.restoreTerminalHistory();

            // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
            this.updateHint();
        }
    },

    /**
     * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –≤ localStorage
     */
    saveProgress() {
        Utils.storage('lesson4-progress', {
            currentStepIndex: this.currentStepIndex,
            completedSteps: this.completedSteps,
            totalSteps: this.totalSteps,
            lastUpdated: new Date().toISOString()
        });
    },

    /**
     * –°–±—Ä–æ—Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É—Ä–æ–∫–∞
     */
    resetProgress() {
        this.currentStepIndex = 0;
        this.completedSteps = 0;

        // –û—á–∏—â–∞–µ–º localStorage
        Utils.storage('lesson4-progress', null);

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º UI
        this.stepCards.forEach((card, index) => {
            card.classList.remove('active', 'completed');
            if (index === 0) {
                card.classList.add('active');
            }

            const statusElement = card.querySelector('.step-status');
            if (statusElement) {
                statusElement.textContent = index === 0 ? '‚è≥' : '‚≠ï';
            }
        });

        // –û—á–∏—â–∞–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª
        this.terminalOutput.innerHTML = `
            <div class="terminal-line">
                <span class="prompt">‚ö° claude</span>
                <span class="text">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–∂–∏–º Claude Code!</span>
            </div>
            <div class="terminal-line">
                <span class="prompt">‚ö° claude</span>
                <span class="text">–§–∏–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–∫: –∏–∑—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∏—á–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é!</span>
            </div>
        `;

        this.updateUI();
        this.updateHint();

        console.log('Lesson4: –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–±—Ä–æ—à–µ–Ω');
    },

    /**
     * –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤
     */
    restoreTerminalHistory() {
        // –ï—Å–ª–∏ –Ω–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —à–∞–≥–æ–≤, –æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if (this.completedSteps === 0) {
            return;
        }

        // –û—á–∏—â–∞–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª –æ—Ç –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        this.terminalOutput.innerHTML = '';

        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        this.addTerminalLine('‚ö° claude', '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —Ä–µ–∂–∏–º Claude Code!', 'system');
        this.addTerminalLine('‚ö° claude', '–§–∏–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–∫: –∏–∑—É—á–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —Ñ–∏—á–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é!', 'system');

        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
        for (let i = 0; i < this.completedSteps; i++) {
            const step = this.lessonSteps[i];
            if (step) {
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                this.addTerminalLine('‚ö° claude', step.command, 'user');
                // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å–∏—Å—Ç–µ–º—ã
                this.addTerminalLine('', step.response, 'response');
            }
        }

        // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ —à–∞–≥–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        if (this.currentStepIndex < this.totalSteps) {
            this.addTerminalLine('‚ö° claude', `–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —à–∞–≥–∞ ${this.currentStepIndex + 1}...`, 'system');
        }
    }
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', () => {
    if (document.getElementById('terminal-input')) {
        Lesson4.init();
    }
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.Lesson4 = Lesson4;
